name: Release packages
on:
  push:
    branches:
      - master
    paths:
      - 'library/**'
      - 'installers/**'
      - 'create_webpages.py'
      - 'requirements.txt'
      - '*.R'
      - '.github/**'
      - 'index.template'

jobs:
  sources:
    name: source
    if: "!contains(github.event.head_commit.message, 'skip repo')"
    runs-on: ubuntu-latest
    env:
      TZ: "Pacific/Auckland"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --use-feature=2020-resolver -r ./requirements.txt

      - name: Generate credentials
        run: |
          python aws_saml_login.py \
            --user ${{ secrets.AWS_USER }} \
            --password ${{ secrets.AWS_PASS}} \
            --token ${{ secrets.AWS_TOKEN }} \
            --idp iam.auckland.ac.nz

      - name: Pull repository
        run: |
          mkdir -p src
          aws --profile saml s3 sync \
            s3://r.docker.stat.auckland.ac.nz/src \
            src

      - name: Build sources for updated packages
        env:
          OS_TYPE: ${{ runner.os }}
        run: Rscript build.R

      - name: Push repository
        run: |
          aws --profile saml s3 sync --delete \
            src \
            s3://r.docker.stat.auckland.ac.nz/src

  binaries:
    name: windows binaries (${{ matrix.config.r }})
    if: "!contains(github.event.head_commit.message, 'skip repo')"
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          # - {os: windows-latest, r: '3.6'}
          - {os: windows-latest, r: 'oldrel'}
          - {os: windows-latest, r: 'release'}
          - {os: windows-latest, r: 'devel'}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      TZ: "Pacific/Auckland"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - name: Query packages
        run: |
          saveRDS(system("cat library/*/DESCRIPTION", intern = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Set R version env var
        id: r-version
        run: echo "::set-output name=ver::$(Rscript rversion.R)"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install ./lxml-4.2.3-cp37-cp37m-win_amd64.whl
          pip install --use-feature=2020-resolver -r ./requirements.txt

      - name: Generate credentials
        run: |
          python aws_saml_login.py `
            --user ${{ secrets.AWS_USER }} `
            --password ${{ secrets.AWS_PASS}} `
            --token ${{ secrets.AWS_TOKEN }} `
            --idp iam.auckland.ac.nz

      - name: Pull repository
        run: |
          mkdir -p bin/windows/contrib/${{ steps.r-version.outputs.ver }}
          aws --profile saml s3 sync `
            s3://r.docker.stat.auckland.ac.nz/bin/windows/contrib/${{ steps.r-version.outputs.ver }} `
            bin/windows/contrib/${{ steps.r-version.outputs.ver }}
          rm  bin/windows/contrib/${{ steps.r-version.outputs.ver }}/iNZightTools_1.9.1.zip

      - name: Install RGtk2
        run: library/iNZight/.github/install_gtk.cmd
        shell: bash

      - name: Add GTK to PATH
        run: echo "::add-path::D:\a\_temp\Library\RGtk2\gtk\bin"

      - name: Install packages
        run: Rscript install.R

      - name: Build binaries for updated packages
        env:
          OS_TYPE: ${{ runner.os }}
        run: Rscript build.R

      - name: Push repository
        run: |
          aws --profile saml s3 sync --delete `
            bin/windows/contrib/${{ steps.r-version.outputs.ver }} `
            s3://r.docker.stat.auckland.ac.nz/bin/windows/contrib/${{ steps.r-version.outputs.ver }}

  clearcache:
    name: Clear AWS cache and update HTML
    runs-on: ubuntu-latest
    needs: [sources, binaries]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install ./lxml-4.2.3-cp37-cp37m-win_amd64.whl
          pip install --use-feature=2020-resolver -r ./requirements.txt

      - name: Generate credentials
        run: |
          python aws_saml_login.py \
            --user ${{ secrets.AWS_USER }} \
            --password ${{ secrets.AWS_PASS}} \
            --token ${{ secrets.AWS_TOKEN }} \
            --idp iam.auckland.ac.nz

      - name: Pull repository
        run: |
          aws --profile saml s3 sync \
            s3://r.docker.stat.auckland.ac.nz/bin bin
          aws --profile saml s3 sync \
            s3://r.docker.stat.auckland.ac.nz/src src

      - name: Update HTML pages
        run: |
          python create_webpages.py --path bin
          python create_webpages.py --path src

      - name: Push repository
        run: |
          aws --profile saml s3 sync --delete \
            bin s3://r.docker.stat.auckland.ac.nz/bin
          aws --profile saml s3 sync --delete \
            src s3://r.docker.stat.auckland.ac.nz/src

      - name: Clear cache
        run: |
          aws --profile 'saml' \
            cloudfront \
            create-invalidation \
            --distribution-id ${{ secrets.AWS_ID }} \
            --paths "/*"

  windows-installer:
    name: Deploy Windows installer
    runs-on: windows-latest
    continue-on-error: true
    needs: clearcache
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --use-feature=2020-resolver -r ./requirements.txt

      - name: Generate credentials
        run: |
          python aws_saml_login.py `
            --user ${{ secrets.AWS_USER }} `
            --password ${{ secrets.AWS_PASS}} `
            --token ${{ secrets.AWS_TOKEN }} `
            --idp iam.auckland.ac.nz

      - name: Upload installer
        run: |
          aws --profile saml s3 sync `
            --exclude *.zip --exclude *.exe --exclude *.bz2 --exclude *.dmg `
            s3://r.docker.stat.auckland.ac.nz/downloads downloads

      - name: Install iNZight
        working-directory: installers/win-installer
        run: Rscript install_inzight.R

      - name: Set iNZight version
        id: inzight
        run: echo "::set-output name=version::$(Rscript inzversion.R)"

      - name: Download GTK+
        run: |
          curl -L http://ftp.gnome.org/pub/gnome/binaries/win32/gtk+/2.22/gtk+-bundle_2.22.1-20101227_win32.zip -o gtk32.zip
          mkdir -p gtk/i386
          cd gtk/i386
          7z x ../../gtk32.zip

      - name: Add GTK+ to R library
        run: |
          mv gtk ${{ env.R_LIBS_USER }}/RGtk2

      - name: Move R and library to build location
        working-directory: installers/win-installer
        run: |
          mv C:/R R
          mv ${{ env.R_LIBS_USER }} library

      - name: Configure R GUI
        working-directory: installers/win-installer
        run: R\bin\Rscript.exe rgui_settings.R

      - name: Build installer
        working-directory: installers/win-installer
        run: makensis.exe inzight_installer.nsi
        env:
          INSTALLER_VERSION: ${{ steps.inzight.outputs.version }}

      - name: Move installer and create symlink
        run: |
          mv installers/win-installer/iNZightVIT-installer.exe `
            downloads/Windows/iNZightVIT-installer-${{ steps.inzight.outputs.version}}.exe
          ln -s Windows/iNZightVIT-installer-${{ steps.inzight.outputs.version }}.exe `
            downloads/iNZightVIT-installer.exe

      - name: Upload installer
        run: |
          aws --profile saml s3 sync `
            downloads s3://r.docker.stat.auckland.ac.nz/downloads

      - name: Generate index.html
        run: |
          aws --profile saml s3 ls s3://r.docker.stat.auckland.ac.nz/downloads/ > downloads.txt
          aws --profile saml s3 ls s3://r.docker.stat.auckland.ac.nz/downloads/Windows/ > downloads_Windows.txt
          aws --profile saml s3 ls s3://r.docker.stat.auckland.ac.nz/downloads/macOS/ > downloads_macOS.txt
          Rscript create_index.R `
            downloads downloads/Windows downloads/macOS

      - name: Push indices
        run: |
          aws --profile saml s3 sync `
            downloads s3://r.docker.stat.auckland.ac.nz/downloads

      - name: Clear cache
        run: |
          aws --profile 'saml' `
            cloudfront `
            create-invalidation `
            --distribution-id ${{ secrets.AWS_ID }} `
            --paths "/*"
